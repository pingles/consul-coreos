#!/bin/bash

machine_id="$1"
local_ip="$2"

echo "starting consul on machine $machine_id, local ip $local_ip"

docker_host_ip=$(netstat -nr | grep '^0\.0\.0\.0' | awk '{print $2}')
echo "docker host ip: $docker_host_ip"

echo "bootstrapping with etcd"
etcdctl="etcdctl --peers http://$docker_host_ip:4001"
echo "setting /consul.io/bootstrap/machines/$machine_id to $local_ip for bootstrap"
${etcdctl} set "/consul.io/bootstrap/machines/$machine_id" $local_ip > /dev/null  # bootstrapping will have to complete in 5m

echo "listing other bootstrap machines"
bootstrap_node_paths=( $(${etcdctl} ls /consul.io/bootstrap/machines) )
first_node_path=${bootstrap_node_paths[0]}

join_ip=""
if [[ -n "${first_node_path}" ]]; then
  echo "getting node details $first_node_path"
  join_ip=$( ${etcdctl} get $first_node_path --consistent )

  echo "$first_node_path: $join_ip, current local ip: ${local_ip}"

  if [[ "${join_ip}" == "${local_ip}" ]]; then
    join_ip=""
  fi
fi

echo "join ip: $join_ip"
if [[ -n "$join_ip" ]]; then
  run_mode="-join $join_ip"
fi

shift
shift

echo "starting consul: agent, -server, -config-dir=/config, -data-dir=/data, -ui-dir=/ui, -bootstrap-expect 3 $run_mode $@"
/bin/consul agent -server -config-dir=/config -data-dir=/data -ui-dir=/ui -bootstrap-expect 3 $run_mode $@
