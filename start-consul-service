#!/bin/bash

local_addresses=($(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'))
# assume we set a LOCAL_IP env variable for us to register when running locally
local_ip="${local_addresses[0]}"
echo "using local ip: $local_ip"

if [ -n "$COREOS_PRIVATE_IPV4" ]; then
  echo "coreos private ip: $COREOS_PRIVATE_IPV4"
  local_ip = "$COREOS_PRIVATE_IPV4"
fi

docker_host_ip=$(netstat -nr | grep '^0\.0\.0\.0' | awk '{print $2}')
echo "docker host ip: $docker_host_ip"

echo "bootstrapping with etcd"
etcdctl="etcdctl --peers http://$docker_host_ip:4001"
echo "adding $local_ip to bootstrap machines"
${etcdctl} set "/consul.io/bootstrap/machines/$local_ip" $local_ip --ttl 60 > /dev/null  # bootstrapping will have to complete in 60s

echo "listing other bootstrap machines"
bootstrap_node_paths=( $(${etcdctl} ls /consul.io/bootstrap/machines) )
first_node_path=${bootstrap_node_paths[0]}

join_ip=""
if [[ -n "${first_node_path}" ]]; then
  echo "getting node details $first_node_path"
  join_ip=$(${etcdctl} get $first_node_path)
  if [[ $? -ne 0 ]]; then
    join_ip="" #Â most likely node doesnt exist
  else
    if [[ "${join_ip}" == "${local_ip}" ]]; then
      join_ip=""
    fi
  fi
fi

echo "join ip: $join_ip"
if [[ -n "$join_ip" ]]; then
  run_mode="-join $join_ip"
fi

echo "starting consul: agent, -server, -config-dir=/config, -data-dir=/data, -ui-dir=/ui, -bootstrap-expect 3 $run_mode $@"
/bin/consul agent -server -config-dir=/config -data-dir=/data -ui-dir=/ui -bootstrap-expect 3 $run_mode $@